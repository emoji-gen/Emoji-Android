apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "moe.pine.emoji"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    // ---------------------------------------------------------------------------------------------

    def privateDir = new File("${System.env.HOME}/project/Emoji-Android-Private")
    ext.PROJECT_ROOT_DIR = projectDir.parent
    ext.PROJECT_PRIVATE_DIR = privateDir.absolutePath

    if (privateDir.exists()) {
        apply from: "$privateDir/signing.gradle", to: android
        apply from: "$privateDir/fabric.gradle", to: android
        apply from: "$privateDir/firebase.gradle", to: android
    } else {
        throw new GradleException("$privateDir is not found\n" +
                "Please execute `git clone git@github.com:pine/Emoji-Android-Private.git ~/project/Emoji-Android-Private`")
    }

    // ---------------------------------------------------------------------------------------------

    def fabricApiKey = ext.fabricApiKey
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            manifestPlaceholders = [fabricApiKey: fabricApiKey]
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [fabricApiKey: fabricApiKey]
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Fabric
    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }

    // Firebase
    compile 'com.google.firebase:firebase-core:10.0.1'

    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

apply plugin: 'com.google.gms.google-services'